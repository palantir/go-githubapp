common:
  godel-cache:
    key: &godel-cache-key v1-godel-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}
    <<: &restore-godel-cache
      restore_cache:
        keys:
          - *godel-cache-key
    <<: &save-godel-cache
      save_cache:
        key: *godel-cache-key
        paths:
          - ~/.godel

  vendor-cache:
    key: &vendor-cache-key v1-vendor-cache-{{ checksum "Gopkg.lock" }}
    <<: &restore-vendor-cache
      restore_cache:
        keys:
          - *vendor-cache-key
    <<: &save-vendor-cache
      save_cache:
        key: *vendor-cache-key
        paths:
          - vendor

  test-results:
    dir: &results-dir /tmp/test-results
    <<: &store-results
      store_test_results:
        path: *results-dir
    <<: &store-artifacts
      store_artifacts:
        path: *results-dir
        destination: test-results

### Jobs ###

version: 2
jobs:
  verify:
    working_directory: /go/src/github.com/palantir/go-githubapp
    environment:
      TESTS_DIR: *results-dir
    docker:
      - image: circleci/golang:1.13.4-stretch
    steps:
      - checkout
      - *restore-godel-cache
      - run: ./godelw version
      - *save-godel-cache
      - *restore-vendor-cache
      - run: ./godelw run-dep -- ensure -vendor-only
      - *save-vendor-cache
      - run: mkdir -p "${TESTS_DIR}"
      - run: ./godelw verify --apply=false --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"
      - *store-results
      - *store-artifacts

### Workflows ###

workflows:
  version: 2
  build:
    jobs:
      - verify:
          filters: { tags: { only: /.*/ } }
